{
	"name": "dataflowPatientClean",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Input_Dataset_PatientRaw",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output_Dataset_PatientRaw",
						"type": "DatasetReference"
					},
					"name": "outputtoblob"
				},
				{
					"dataset": {
						"referenceName": "Output_Dataset_PatientCosmos_Upsert",
						"type": "DatasetReference"
					},
					"name": "outputtocosmos"
				}
			],
			"transformations": [
				{
					"name": "CreateNewDynamicID"
				},
				{
					"name": "AlterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BeneID as string,",
				"          ClaimID as string,",
				"          ClaimStartDt as string,",
				"          ClaimEndDt as string,",
				"          Provider as string,",
				"          InscClaimAmtReimbursed as string,",
				"          AttendingPhysician as string,",
				"          OperatingPhysician as string,",
				"          OtherPhysician as string,",
				"          AdmissionDt as string,",
				"          ClmAdmitDiagnosisCode as string,",
				"          DeductibleAmtPaid as string,",
				"          DischargeDt as string,",
				"          DiagnosisGroupCode as string,",
				"          ClmDiagnosisCode_1 as string,",
				"          ClmDiagnosisCode_2 as string,",
				"          ClmDiagnosisCode_3 as string,",
				"          ClmDiagnosisCode_4 as string,",
				"          ClmDiagnosisCode_5 as string,",
				"          ClmDiagnosisCode_6 as string,",
				"          ClmDiagnosisCode_7 as string,",
				"          ClmDiagnosisCode_8 as string,",
				"          ClmDiagnosisCode_9 as string,",
				"          ClmDiagnosisCode_10 as string,",
				"          ClmProcedureCode_1 as string,",
				"          ClmProcedureCode_2 as string,",
				"          ClmProcedureCode_3 as string,",
				"          ClmProcedureCode_4 as string,",
				"          ClmProcedureCode_5 as string,",
				"          ClmProcedureCode_6 as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(NewDocumentKey = concat(BeneID,ClaimID )) ~> CreateNewDynamicID",
				"CreateNewDynamicID alterRow(updateIf(true()),",
				"     upsertIf(true())) ~> AlterRow1",
				"CreateNewDynamicID sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string,",
				"          Column_20 as string,",
				"          Column_21 as string,",
				"          Column_22 as string,",
				"          Column_23 as string,",
				"          Column_24 as string,",
				"          Column_25 as string,",
				"          Column_26 as string,",
				"          Column_27 as string,",
				"          Column_28 as string,",
				"          Column_29 as string,",
				"          Column_30 as string",
				"     ),",
				"     partitionFileNames:['patientsoutput.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> outputtoblob",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     format: 'document',",
				"     partitionKey: ['/id'],",
				"     throughput: 400,",
				"     totalWriteThroughputBudget: 400,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BeneID,",
				"          ClaimID,",
				"          ClaimStartDt,",
				"          ClaimEndDt,",
				"          Provider,",
				"          InscClaimAmtReimbursed,",
				"          AttendingPhysician,",
				"          OperatingPhysician,",
				"          OtherPhysician,",
				"          AdmissionDt,",
				"          ClmAdmitDiagnosisCode,",
				"          DeductibleAmtPaid,",
				"          DischargeDt,",
				"          DiagnosisGroupCode,",
				"          ClmDiagnosisCode_1,",
				"          ClmDiagnosisCode_2,",
				"          ClmDiagnosisCode_3,",
				"          ClmDiagnosisCode_4,",
				"          ClmDiagnosisCode_5,",
				"          ClmDiagnosisCode_6,",
				"          ClmDiagnosisCode_7,",
				"          ClmDiagnosisCode_8,",
				"          ClmDiagnosisCode_9,",
				"          ClmDiagnosisCode_10,",
				"          ClmProcedureCode_1,",
				"          ClmProcedureCode_2,",
				"          ClmProcedureCode_3,",
				"          ClmProcedureCode_4,",
				"          ClmProcedureCode_5,",
				"          ClmProcedureCode_6,",
				"          id = NewDocumentKey",
				"     )) ~> outputtocosmos"
			]
		}
	}
}